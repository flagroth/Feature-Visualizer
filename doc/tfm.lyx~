#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Trabajo Fin de Máster: Visualizador de conjuntos de datos
\end_layout

\begin_layout Author
Javier Cano Montero
\end_layout

\begin_layout Abstract
Visualizador...
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Standard
El universo que habitamos es tetradimensional, es decir, tiene tres dimensiones
 espaciales y una temporal.
 Esto nos limita a la hora de poder visualizar objetos (o datos) de mayor
 dimensión, debido a nuestra incapacidad física de poder imaginar más de
 tres dimensiones espaciales.
 Es uso habitual el realizar proyecciones de objetos tridimensionales a
 bidimensionales.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename C:/Users/e6840810/Desktop/memoria_tfm/img/cubo.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Cubo en 2 dimensiones
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En Machine Learning la reducción de dimensionalidad es el proceso de reducir
 el número de variables de un conjunto a un subconjunto de variables manteniendo
 la mayor cantidad de información posible.
 La transformación de datos puede ser lineal o no lineal.
\end_layout

\begin_layout Chapter
Objetivo
\end_layout

\begin_layout Standard
Crear una aplicación web que permita realizar visualizaciones de conjuntos
 de datos de alta dimensión tras aplicar redución de dimensionalidad.
 La aplicación debe presentar las siguientes características:
\end_layout

\begin_layout Itemize
Carga de ficheros desde el ordenador del usuario.
\end_layout

\begin_layout Itemize
Especificar características del dataset (variable target, separador, porcentaje
 de entrenamiento)
\end_layout

\begin_layout Itemize
Selección de las variables que se quieren visualizar.
\end_layout

\begin_layout Itemize
Selección de los algoritmos de reducción de dimensionalidad que se quieren
 utilizar.
\end_layout

\begin_layout Itemize
Visualizar gráficamente el conjunto de datos tras aplicar cada algoritmo
 de reducción de dimensionalidad.
\end_layout

\begin_layout Itemize
Para los algoritmos lineales mostrar cómo cada variable seleccionada es
 proyectada sobre las componentes principales.
\end_layout

\begin_layout Itemize
Para los algoritmos lineales calcular cómo de bien separa linealmente los
 datos el algoritmo de reducción de dimensionalidad.
\end_layout

\begin_layout Chapter
Desarrollo
\end_layout

\begin_layout Section
Aplicación web
\end_layout

\begin_layout Standard
Para crear la aplicación web existen varios frameworks para Python.
 Por familiaridad y las opciones que presta se decidió utilizar Flask.
\end_layout

\begin_layout Standard
Flask es un framework que permite crear una aplicación capaz de responder
 a llamadas HTTP con funciones Python usando decoradores.
 Estas funciones pueden devolver páginas web enteras o completar una parte
 de una plantilla hecha previamente.
 En este proyecto, se han usado ambas aproximaciones, la página de carga
 y preparación de datos es una web estática devuelta por una función; y
 el resto de la aplicación es una plantilla sobre la que se muestran las
 visualizaciones.
\end_layout

\begin_layout Standard
Además, y aunque no era un objetivo del proyecto, Flask permite crear webs
 responsive para la correcta visualización en dispositivos móviles.
\end_layout

\begin_layout Section
Carga y preparación de datos
\end_layout

\begin_layout Standard
La pantalla de carga de datos permite subir un fichero a la aplicación web,
 especificar la variable objetivo, el separador del csv y el porcentaje
 de observaciones que se usarán para entrenamiento.
 Actualmente la aplicación solo acepta ficheros CSV.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/carga_datos.PNG
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pantalla de carga de datos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El fichero se guarda en una carpeta local de la aplicación web para poder
 leerlo y transformarlo en un panel de datos de Python o Pandas.
\end_layout

\begin_layout Standard
Para mostrar el desarrollo de la aplicación se usará un dataset que se distribuy
ó en Kaggle bajo la licencia Creative Commons 4.
 El dataset es un conjunto de datos del juego FIFA 18 (https://www.kaggle.com/thec
03u5/fifa-18-demo-player-dataset) que contiene las estadísticas de todos
 los jugadores disponibles.
 Entre las estadísticas aparecen la media general del jugador, la edad,
 el potencial, la aceleración, agresividad, estadísticas de portero, reacción,
 pases cortos y largos, potencia de disparo, etc...
 Para nuestros ejemplos utilizaremos la variable media general (Overall)
 como variable objetivo y el resto las utilizaremos para realizar la reducción
 de dimensionalidad con los algoritmos implementados en la aplicación.
\end_layout

\begin_layout Subsection
Pandas
\end_layout

\begin_layout Standard
Pandas es la librería de creación de paneles de datos de Python.
 Entre sus funciones, permite leer ficheros CSV y su manipulación.
\end_layout

\begin_layout Standard
En el proyecto se ha usado Pandas para leer el fichero que se sube a la
 aplicación, usando el separador proporcionado por el usuario.
 
\end_layout

\begin_layout Standard
Una vez leídos los datos se realizan las siguientes operaciones:
\end_layout

\begin_layout Enumerate
Se realiza un muestreo estratificado si el usuario lo indica.
\end_layout

\begin_layout Enumerate
Se carga en una lista la variable objetivo del conjunto de datos y se elimina
 del panel.
 
\end_layout

\begin_layout Enumerate
Se transforman las variables a numéricas.
 Si se carga alguna variable categórica (que no sea la variable target)
 en el conjunto de datos la aplicación mostrará un error.
\end_layout

\begin_layout Enumerate
Se normalizan los datos (Media 0, desv.
 típica 1).
\end_layout

\begin_layout Enumerate
Se parten los datos en un conjunto de entrenamiento y pruebas.
 El porcentaje de observaciones que se incluyen en el conjunto de entrenamiento
 es especificado por el usuario en la pantalla de carga de datos.
\end_layout

\begin_layout Section
Selección de variables y algoritmos de reducción de dimensionalidad
\end_layout

\begin_layout Standard
Una vez cargados y preparados los datos, se muestra la pantalla para la
 selección de variables y algoritmos de reducción de dimensionalidad.
\end_layout

\begin_layout Standard
En esta pantalla se mostrarán todas las variables del conjunto de datos
 menos la variable objetivo especificada por el usuario en la pantalla de
 carga de datos.
 El usuario podrá seleccionar cuáles de estas variables se pasarán al algoritmo
 de reducción de dimensionalidad.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/visualizer.PNG
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pantalla de selección de variables y algoritmos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
También se muestran los algoritmos de reducción de dimensionalidad que se
 pueden ejecutar sobre las variables seleccionadas del conjunto de datos.
 
\end_layout

\begin_layout Subsection
Scikit-learn
\end_layout

\begin_layout Standard
Scikit-learn es la librería de machine learning más utilizada de Python.
 Entre los métodos que incluye se encuentran los que necesitamos para realizar
 reducción de dimensionalidad y los clasificadores lineales.
\end_layout

\begin_layout Subsubsection
Algoritmos de reducción de dimensionalidad
\end_layout

\begin_layout Subsubsection*
Lineales
\end_layout

\begin_layout Standard
Estos algoritmos buscan un sistema de referencia de dimensión inferior al
 original sobre el que proyectar el conjunto de datos.
 El criterio para encontrar ese sistema de referencia depende del algoritmo.
 
\end_layout

\begin_layout Standard
En los algoritmos lineales, se puede observar cómo cada una de las variables
 forma parte de la nueva proyección.
 En estos algoritmos se obtienen componentes lineales, formadas por un escalar
 y un ángulo, que permiten explicar cómo cada variable es tomada en cuenta
 a la hora de crear el nuevo sistema de referencia.
\end_layout

\begin_layout Standard
Scikit-Learn ofrece una API muy similar para los algoritmos de reducción
 de dimensionalidad, por lo que se pueden ejecutar de forma similar:
\end_layout

\begin_layout Enumerate

\series bold
Crear objeto
\series default
.
 En el constructor especificamos que el espacio destino en el que proyectaremos
 los datos es de dimensión 2.
\end_layout

\begin_layout Enumerate

\series bold
Realizar fit
\series default
.
 Con los datos de entrenamiento, construimos el espacio de destino.
\end_layout

\begin_layout Enumerate

\series bold
Transformar train
\series default
.
 Proyectamos los datos de entrenamiento sobre el espacio de destino.
\end_layout

\begin_layout Enumerate

\series bold
Transformar test
\series default
.
 Proyectamos los datos de prueba sobre el espacio de destino.
\end_layout

\begin_layout Standard
Una vez se ha realizado la reducción de dimensionalidad del conjunto de
 datos, se pasan a la librería bokeh para representarlos gráficamente.
\end_layout

\begin_layout Paragraph*
Principal Component Analysis
\end_layout

\begin_layout Standard
Busca la proyección en la que los datos queden representados en términos
 de mínimos cuadrados.
 Para ello, se realiza una descomposición en autovalores y se calcula la
 matriz de covarianza.
 Los nuevos ejes sobre los que se proyectan los datos son las componentes
 principales.
 La primera componente principal esla transformación lineal que maximiza
 la varianza de los datos, la segunda es la segunda mayor combinación, etc...
\end_layout

\begin_layout Paragraph*
Linear Discriminant Analysis
\end_layout

\begin_layout Standard
Algoritmo de clasificación que generaliza el discriminante lineal de Fisher,
 un algoritmo que busca una combinación lineal que separe distintas clases
 de objetos o eventos.
 La combinación puede ser usada como un clasificador lineal y para realizar
 una reducción de dimensionalidad.
 LDA busca modelar la diferencia de la clase de datos, mientras PCA no la
 tiene en cuenta.
\end_layout

\begin_layout Paragraph*
Proyección aleatoria Gaussiana
\end_layout

\begin_layout Standard
Es una proyección en la que las componentes de proyección (escalar y ángulo)
 se toman al azar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/pca_fifa.png
	lyxscale 25
	scale 10

\end_inset


\begin_inset Graphics
	filename img/lda_fifa.png
	lyxscale 25
	scale 10

\end_inset


\begin_inset Graphics
	filename img/random_fifa.png
	lyxscale 25
	scale 10

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
(1) PCA (2) LDA (3) RANDOM
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "FiguraPCA"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los métodos lineales, podemos ver cómo las distintas variables afectan
 a la construción de las componentes principales.
 En caso de PCA, como el criterio de construcción del espacio de dimensión
 reducida es maximizar la varianza, podemos ver que separa a los jugadores
 en dos tipos.
 Una gran nube centrada y otra pequeña que se centra en valores altos de
 la primera componente principal.
 Estudiando las componentes observamos que esta pequeña nube de jugadores
 tiene valores altos en las variables GK diving, GK handling, GK kicking,
 GK positioning y GK reflexes; es decir variables de portero (Goal Keeper).
 Como LDA tiene en cuenta la variable objetivo a la hora de crear el espacio
 de dimensión reducida no se observa esta separación.
 En la proyección aleatoria, como las componentes son elegidas al azar,
 no hay nada que resaltar.
\end_layout

\begin_layout Subsubsection*
No lineales
\end_layout

\begin_layout Paragraph*
Multi-Dimensional Scaling
\end_layout

\begin_layout Standard
Busca qué factores (dimensiones) subyacen bajo los datos obtenidos en el
 conjunto de datos.
 Muy utilizado en marketing y ciencias sociales.
 Construye una matriz de distancias con los datos y reconstruye en el espacio
 objetivo el conjunto de datos manteniendo las distancias.
\end_layout

\begin_layout Paragraph*
T-Distributed Stochastic Neighbour Embeding (T-SNE)
\end_layout

\begin_layout Standard
Observaciones cercanas en alta dimensión están próximos en el espacio objetivo.
 Tiene dos etapas: 
\end_layout

\begin_layout Enumerate
Construir una probabilidad de distribución sobre los puntos en alta dimensión
\end_layout

\begin_layout Enumerate
Define una probabilidad de distribución similar sobre el espacio objetivo.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/mds_fifa.png
	lyxscale 25
	scale 10

\end_inset


\begin_inset Graphics
	filename img/tsne-fifa.png
	lyxscale 25
	scale 10

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
(1) MDS (2) T-SNE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los métodos no lineales se puede observar que se forman dos nubes de
 puntos.
 Ambos casos son iguales que en PCA, los porteros forman su propia nube.
 Para verificarlo, puede resaltarse en la visualización de PCA a los porteros
 y observar cómo se resaltan en estas visualizaciones.
\end_layout

\begin_layout Subsubsection
Clasificador lineal (SVM)
\end_layout

\begin_layout Standard
Para poder saber cómo de bien separan los algoritmos de reducción de dimensional
idad los datos, se ha optado por ejecutar una SVM con kernel lineal con
 los datos en dimensión reducida en los algoritmos lineales, excepto LDA
 porque ya es un algoritmo de clasificación.
 Los datos de entrenamiento de dimensión reducida se usan para entrenar
 la SVM y se predice el conjunto de datos de prueba.
 Con las predicciones se calcula el accuracy (acierto/total).
\end_layout

\begin_layout Standard
Una vez realizada la reducción de dimensionalidad y calculado el accuracy
 del clasificador lineal se crean las visualizaciones.
\end_layout

\begin_layout Subsection
Bokeh
\end_layout

\begin_layout Standard
Bokeh es una librería para creación de visualizaciones en Python que permite
 interactividad e integrarse fácilmente con Flask.
 Para crear las visualizaciones se cargan los datos en una estructura de
 datos propia de Bokeh (ColumnDataSource) que permite vincular distintas
 gráficas, permitiéndonos resaltar puntos en una gráfica y que estos puntos
 queden resaltados en el resto de gráficas.
\end_layout

\begin_layout Standard
La aplicación recibe de la pantalla de selección de variables y algoritmos
 una lista con los algoritmos que tiene que representar, realiza la reducción
 de dimensionalidad y crea las figuras, que son incluídas en una lista.
 Si se desea visualizar un algoritmo de reducción de dimensionalidad lineal,
 también se extraen las componentes principales.
\end_layout

\begin_layout Standard
Finalmente, con Bokeh se crea un 
\begin_inset Quotes eld
\end_inset

contenedor
\begin_inset Quotes erd
\end_inset

 que incluye todas las figuras y se devuelve el renderizado de una plantilla
 con las gráficas incluídas.
 En las gráfica los datos de entrenamiento se muestran como cuadrados y
 los datos de test como círculos.
\end_layout

\begin_layout Chapter
Caso de uso: Surtido retail
\end_layout

\begin_layout Standard
Para demostrar la utilidad de la herramienta se va a realizar un análisis
 del surtido de una cadena de hipermercados.
 El surtido se divide en una complicada jerarquía (sector, sección, categoría,
 familia, subfamilia...) en la que se puede clasificar cada producto.
 Además, tiene otras características como si se vende en mostrador, la marca,
 descripciones del producto, etc...
 Visualizar este conjunto de datos nos permitiría encontrar errores en la
 clasificación dentro de la jerarquía y proponer una nueva distribución
 para simplificar la compleja jerarquía y usarlo en proyectos como optimización
 de layouts, segmentación de clientes...
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/dataset_w2v.PNG
	lyxscale 25
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Muestra del dataset
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El dataset contiene una gran cantidad de NAs, ya que no todos los productos
 tienen las mismas características, dispone de gran cantidad de variables
 categóricas y descripciones de los propios productos.
 Para poder realizar una visualización se optó por realizar un word2vec
 de cada producto.
 El word2vec nos permite representar un dataset de alta complejidad en un
 conjunto reducido de dimensiones (20 en nuestro caso).
 Los detalles de la construcción de este word2vec quedan fuera del alcance
 de este proyecto, ya que forma parte de los procesos internos de la empresa.
 
\end_layout

\begin_layout Standard
Para realizar las visualizaciones usaremos un muestreo estratificado del
 10% del dataset y como variable objetivo usaremos el identificador del
 sector del producto.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/pca_w2v.png
	lyxscale 25
	scale 20

\end_inset


\begin_inset Graphics
	filename img/lda_w2v.png
	lyxscale 25
	scale 20

\end_inset


\begin_inset Graphics
	filename img/random_w2v.png
	lyxscale 25
	scale 20

\end_inset


\begin_inset Graphics
	filename img/tsne_w2v.png
	lyxscale 25
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
(1) PCA (2) LDA (3) RANDOM (4) TSNE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se puede observar en las visualizaciones lineales que los sectores tienen
 cierto solape en algunos artículos.
 Este solape se debe a que muchos artículos similares pertenecen a distintos
 sectores.
 Se puede observar en T-SNE que artículos del mismo sector aparecen en posicione
s opuestas en la representación, esto refuerza la hipótesis de que artículos
 similares pertenecen a sectores distintos.
 También se observa que en T-SNE aparecen distintos clusters.
 Cada uno de estos clusters pertenece a las categorías inferiores de la
 jerarquía de productos.
\end_layout

\begin_layout Chapter
Conclusiones y trabajo futuro
\end_layout

\begin_layout Standard
Se ha creado una aplicación web que permite realizar visualizaciones de
 conjuntos de datos de alta dimensión tras aplicar redución de dimensionalidad
 para realizar exploraciones y poder caracterizar rápidamente visualizaciones
 de los métodos de reducción de dimensionalidad no lineales usando Bokeh
 sobre Flask.
\end_layout

\begin_layout Standard
En el futuro se propone implementar otros clasificadores no lineales e introduci
r mejoras en la experiencia de usuario como por ejemplo ser capaz de seleccionar
 en la visualización las variables que se van a introducir en siguientes
 visualizaciones.
\end_layout

\end_body
\end_document
